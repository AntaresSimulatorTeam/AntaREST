name: main
on:
  push:
    branches:
      - '**'

jobs:
  python-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout github repo (+ download lfs dependencies)
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Check with black
        uses: psf/black@stable
        with:
          options: --check --diff
      - name: Check Typing (mypy)
        #continue-on-error: true
        run: |
          mypy --install-types --non-interactive

  python-test:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 9
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout github repo (+ download lfs dependencies)
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Fix symlink for windows
        if: matrix.os == 'windows-latest'
        run: |
          rm antareslauncher
          ln -s antares-launcher\antareslauncher antareslauncher
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Test with pytest
        run: |
          pytest --cov antarest --cov-report xml
      - name: Fix code coverage paths
        if: matrix.os == 'ubuntu-latest'
        run: |
          sed -i 's/\/home\/runner\/work\/AntaREST\/AntaREST/\/github\/workspace/g' coverage.xml
      - name: Archive code coverage results
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: python-code-coverage-report
          path: coverage.xml

  npm-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout github repo
        uses: actions/checkout@v1
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install dependencies
        run: npm install
        working-directory: webapp
      - name: Build
        run: npm run build
        working-directory: webapp
        env:
          NODE_OPTIONS: --max-old-space-size=8192
          DISABLE_ESLINT_PLUGIN: true
      - name: Lint
        run: npm run lint
        working-directory: webapp
      - name: Run tests
        run: npm run test-coverage
        working-directory: webapp
        env:
          CI: true
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: js-code-coverage-report
          path: webapp/coverage/lcov.info

  sonarcloud:
    runs-on: ubuntu-latest
    needs: [python-test, npm-test]
    steps:
    - uses: actions/checkout@v2
    - name: Download python coverage report
      uses: actions/download-artifact@v3
      with:
        name: python-code-coverage-report
    - name: Download js coverage report
      uses: actions/download-artifact@v3
      with:
        name: js-code-coverage-report
        path: webapp/coverage
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}