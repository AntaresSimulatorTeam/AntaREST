name: test
on:
  push:
    branches:
      - 'issue-859-Windows_worker'

jobs:
  binary:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout github repo (+ download lfs dependencies)
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pydantic --no-binary pydantic
          pip install -r requirements-dev.txt
      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: pip install -r requirements-windows.txt
      - name: Fix symlink for windows
        if: matrix.os == 'windows-latest'
        run: |
          rm antareslauncher
          ln -s antares-launcher\antareslauncher antareslauncher
      - name: Generate Windows binary
        if: matrix.os == 'windows-latest'
        run: |
          git log -1 HEAD --format=%H > .\resources\commit_id
          pyinstaller -F antarest\worker\windows_service.py -n AntaresWebWorker --hidden-import='cmath' --hidden-import='sqlalchemy.sql.default_comparator' --hidden-import='sqlalchemy.ext.baked' --additional-hooks-dir extra-hooks --add-data ".\resources;.\resources"
      - name: Generate linux binary
        if: matrix.os == 'ubuntu-latest'
        run: |
          git log -1 HEAD --format=%H > .\resources\commit_id
          pyinstaller -F antarest/worker/windows_service.py -n AntaresTool --hidden-import='cmath' --hidden-import='sqlalchemy.sql.default_comparator' --hidden-import='sqlalchemy.ext.baked' --additional-hooks-dir extra-hooks --add-data resources:resources
      - name: Archive binaries
        uses: actions/upload-artifact@v2
        with:
          name: AntaresWebWorker-${{ matrix.os }}
          path: dist/*
