"""update_study

Revision ID: 0146b79f723c
Revises: 3292cdb4557a
Create Date: 2021-09-06 18:42:12.670422

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()


# revision identifiers, used by Alembic.


revision = '0146b79f723c'
down_revision = '3292cdb4557a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('study', schema=None) as batch_op:
        batch_op.add_column(sa.Column('path', sa.String(length=255), nullable=True))

    # path data migration
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    rawstudies = session.execute("SELECT id,path FROM rawstudy")
    for rawstudy in rawstudies:
        session.execute(f"UPDATE study SET path='{rawstudy[1]}' WHERE id='{rawstudy[0]}'")
    session.commit()
    # end of path data migration

    with op.batch_alter_table('rawstudy', schema=None) as batch_op:
        batch_op.drop_column('path')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rawstudy', schema=None) as batch_op:
        batch_op.add_column(sa.Column('path', sa.VARCHAR(length=255), nullable=True))

    # path data migration
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    studies = session.execute("SELECT id,path FROM study")
    for study in studies:
        session.execute(f"UPDATE rawstudy SET path='{study[1]}' WHERE id='{study[0]}'")
    session.commit()
    # end of path data migration

    with op.batch_alter_table('study', schema=None) as batch_op:
        batch_op.drop_column('path')

    # ### end Alembic commands ###
