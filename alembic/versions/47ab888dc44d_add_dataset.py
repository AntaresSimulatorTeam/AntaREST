"""add_dataset

Revision ID: 47ab888dc44d
Revises: 6a04e38b8704
Create Date: 2021-07-20 13:41:42.420567

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '47ab888dc44d'
down_revision = '6a04e38b8704'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataset',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['identities.id'], name='fk_matrixdataset_identities_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('dataset_matrices',
    sa.Column('dataset_id', sa.String(), nullable=False),
    sa.Column('matrix_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], name='fk_matrixdatasetrelation_dataset_id'),
    sa.ForeignKeyConstraint(['matrix_id'], ['matrix.id'], name='fk_matrixdatasetrelation_matrix_id'),
    sa.PrimaryKeyConstraint('dataset_id', 'matrix_id', 'name')
    )
    op.create_table('matrix_dataset_group',
    sa.Column('dataset_id', sa.String(length=64), nullable=False),
    sa.Column('group_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('dataset_id', 'group_id')
    )
    op.drop_table('matrix_user_metadata')
    op.drop_table('matrix_group')
    op.drop_table('matrix_metadata')
    with op.batch_alter_table('matrix', schema=None) as batch_op:
        batch_op.add_column(sa.Column('width', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('height', sa.Integer(), nullable=True))
        batch_op.drop_column('freq')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('matrix', schema=None) as batch_op:
        batch_op.add_column(sa.Column('freq', sa.VARCHAR(length=7), nullable=True))
        batch_op.drop_column('height')
        batch_op.drop_column('width')

    op.create_table('matrix_metadata',
    sa.Column('matrix_id', sa.VARCHAR(length=64), nullable=False),
    sa.Column('owner_id', sa.INTEGER(), nullable=False),
    sa.Column('key', sa.VARCHAR(), nullable=False),
    sa.Column('value', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['matrix_id'], ['matrix.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['identities.id'], ),
    sa.PrimaryKeyConstraint('matrix_id', 'owner_id', 'key')
    )
    op.create_table('matrix_group',
    sa.Column('matrix_id', sa.VARCHAR(length=64), nullable=False),
    sa.Column('owner_id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.VARCHAR(length=36), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['matrix_id'], ['matrix.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['identities.id'], ),
    sa.PrimaryKeyConstraint('matrix_id', 'owner_id', 'group_id')
    )
    op.create_table('matrix_user_metadata',
    sa.Column('matrix_id', sa.VARCHAR(length=64), nullable=False),
    sa.Column('owner_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['matrix_id'], ['matrix.id'], name='fk_matrix_user_metadata_matrix_id'),
    sa.ForeignKeyConstraint(['owner_id'], ['identities.id'], name='fk_matrix_user_metadata_identities_id'),
    sa.PrimaryKeyConstraint('matrix_id', 'owner_id')
    )
    op.drop_table('matrix_dataset_group')
    op.drop_table('dataset_matrices')
    op.drop_table('dataset')
    # ### end Alembic commands ###
